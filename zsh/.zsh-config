
# Zsh aliases
alias zshrc="nano ~/.zshrc"
alias ohmyzsh="nano ~/.oh-my-zsh"

# VScode aliases
#alias jdej="code --extensions-dir $HOME/dev/jdej/vscode-profiles/jdej/exts --user-data-dir $HOME/dev/jdej/vscode-profiles/jdej/data"
#alias npaw="code --extensions-dir $HOME/dev/jdej/vscode-profiles/npaw/exts --user-data-dir $HOME/dev/jdej/vscode-profiles/npaw/data"

# Git aliases
alias gi='git init'
alias gcl='git clone'
alias gc='git fetch --all && git checkout'
alias gs='git fetch --all && git status'
alias gcb='git checkout -b'
alias gc-='git checkout -'
alias gf='git fetch --all'
alias ga='git add -A'
alias gcm='git add -A && git commit -m'
alias gca='git commit --amend --no-edit'
alias gp='git push'
alias gpo='git push origin'
alias gpu='git push -u origin'
alias gpl='git fetch --all && git pull --no-rebase origin'
alias gr='git reset'
alias grs='git reset --soft HEAD'
alias grh='git reset --hard HEAD'
alias gst='git stash'
alias gsm='git stash push -m'
alias gsl='git stash list'
alias gsa='git stash apply stash@{n}'
alias gsp='git stash pop stash@'
alias gsc='git stash clear'
alias gl='git log --oneline'
alias gd='git diff'
alias gb='git branch -a'
alias gbr='git branch -m'
alias gra='git remote add'
alias grd='git remote rm'
alias gbl='git branch --sort=-committerdate  # DESC'
alias gm='git fetch --all && git merge origin'

# leverage an aliases from the ~/.gitconfig
alias gh='git hist'
alias glg='git lg'
alias glg1='git lg1'
alias glg2='git lg2'
alias glg3='git lg3'

# Change directory to the current Finder directory
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# NVM
source $(brew --prefix nvm)/nvm.sh

# Loads the proper Node version in each folder
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

### NPAW aliases
#alias yul='gc hotfix && git pull && gc qa && git pull && gc develop && git pull'
#alias yub='gc hotfix && git pull && git pull origin master && gp && gc preprod && git pull origin hotfix && git pull && gp && gc qa && git pull && git pull origin hotfix && gp && gc develop 
#&& git pull && git pull origin qa && gp'
#ssh npawdev@ci2-nl3.youbora.com'

### Rakuten aliases
# pnpm aliases
alias pnpms='pnpm start'
alias pnpmt='pnpm run test'
alias pnpmc='pnpm run test:coverage'
alias pnpmf='pnpm flow'

# deploy aliases
JID=JdeJ
JTO=11c48b57add78041fbb367b18e1fb18e4e
# alias de4004='cd ~/DEV/groot && gpl && JENKINS_USER_ID="$JID" JENKINS_TOKEN="$JTO" pnpm run deploy -- -p ui40 -d webos -e dev04 -b'
deploy() {
  cd ~/DEV/groot && gpl && JENKINS_USER_ID="$JID" JENKINS_TOKEN="$JTO" pnpm run deploy -- -p ui40 -d webos -e dev0$1 -b $2 --force
}
